generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SSO_Providers {
  id         Int          @id(map: "pk_sso_providers") @default(autoincrement())
  name       String       @unique(map: "uk_sso_providers") @db.VarChar(255)
  SSO_Tokens SSO_Tokens[]
}

model SSO_Tokens {
  id            Int           @id(map: "pk_sso_tokens") @default(autoincrement())
  user_id       Int
  provider_id   Int
  client_id     String        @db.VarChar(255) @unique
  access_token  String        @db.VarChar(255)
  refresh_token String?       @db.VarChar(255)
  expires_in    Int?
  created_at    DateTime      @default(now()) @db.Timestamp(6)
  updated_at    DateTime      @default(now()) @db.Timestamp(6)
  SSO_Providers SSO_Providers @relation(fields: [provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sso_tokens_sso_providers")
  Users         Users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sso_tokens_users")

  @@unique([provider_id, user_id], map: "uk_provider")
}

model Users {
  id         Int          @id @default(autoincrement())
  uuid       String       @unique(map: "pk_uuid") @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  username   String       @unique(map: "uk_users") @db.VarChar(255)
  password   String       @db.VarChar(255)
  created_at DateTime     @default(now()) @db.Timestamp(6)
  updated_at DateTime     @default(now()) @db.Timestamp(6)
  SSO_Tokens SSO_Tokens[]
}
